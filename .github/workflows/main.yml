name: deploy

on:
  push:
    branches: [deploy-test]

permissions:
  contents: read 

env:
  S3_BUCKET_NAME: bucket-issue-tracker-by-lucid
  PROJECT_NAME: issue-tracker-deploy

jobs:
  build:
    name: deploy to staging
    runs-on: ubuntu-latest

    env:
      working-directory: ./BE

    steps:
      - name: ✅ Checkout
        uses: actions/checkout@v3
      
      - name: ⚙️ Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          
      # https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - name: Use gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          
      - name: 🔐 Grant execution permission for gradlew
        run: chmod +x gradlew
        shell: bash
        working-directory: ${{env.working-directory}}
        
      - name: 🔧 Build with Gradle
        run: ./gradlew build
        shell: bash
        working-directory: ${{env.working-directory}}
        
      - name: 🔧 Make zip file  
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
        working-directory: ${{env.working-directory}}
        
      # S3에 접근 전 AWS를 통해 인증과정을 진행한다. 이 때 "secrets.*"는 깃허브 세팅에 넣어둔다.
      - name: ⚙️ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
          
      # S3으로 zip 파일을 이동
      - name: ⬆️ Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
        working-directory: ${{env.working-directory}}
     
      # Code Deploy를 통해 ec2로 zip file 옮기기
      - name: ➡️ Code Deploy
        run: aws deploy create-deployment
          --application-name issue-tracker-deploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name issue-tracker-deploy-group
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
        working-directory: ${{env.WORKING_DIRECTORY}}

